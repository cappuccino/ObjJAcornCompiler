{
    "*": {
        "indent-string": " ",
        "indent-width": 4,
        "before-comma": "",
        "after-comma": " ",
        "after-left-parens": "",
        "before-left-parens": ""
    },
    "*control": {
        "nodes": [
            "if",
            "for",
            "for in",
            "while",
            "do while",
            "switch",
            "try",
            "with"
        ],
        "before": {
            "*": "\n\n",
            "program": "",
            "*control": "",
            "{}": "",
            "label": "\n"
        },
        "before-left-parens": " ",
        "after-left-parens": ""
    },
    "*statement": {
        "nodes": [
            "expression statement",
            "break",
            "continue",
            "debugger",
            "ivar",
            "return",
            "throw",
            "var",
            "empty statement"
        ],
        "before": "\n",
        "after": ";"
    },
    "{}": {
        "before": "\n",
        "after-left-brace": "|1",
        "before-right-brace": "\n|-1"
    },
    "if": {
        "before-else": "\n",
        "after-else": ""
    },
    "label": {
        "before": {
            "*": "\n\n",
            "label": "\n"
        },
        "after-colon": ""
    },
    "break": {
    },
    "continue": {
    },
    "with": {},
    "switch": {
        "after-left-brace": "",
        "before-case": "\n",
        "after-case": " ",
        "after-colon": "",
        "before-left-brace": "\n"
    },
    "return": {
        "before-expression": " "
    },
    "throw": {
        "before-expression": " "
    },
    "try": {
        "before-catch": ""
    },
    "while": {},
    "do while": {
        "before-statement": ""
    },
    "for": {
        "after-init-expression": "",
        "after-init-semicolon": " "
    },
    "for in": {
        "before-in": " ",
        "after-in": " "
    },
    "for init": {},
    "debugger": {
    },
    "function": {
        "before-left-parens": ""
    },
    "function expression": {},
    "var": {
        "before": {
            "*": "\n",
            "for": "",
            "var": "\n\n"
        },
        "before-assign": " ",
        "after-assign": " ",
        "after-comma": {
            "*": "\n    ",
            "for": " "
        },
        "after": {
            "for": ""
        }
    },
    "this": {},
    "array": {},
    "object": {
        "before-colon": "",
        "after-colon": " "
    },
    ",": {},
    "unary expression": {},
    "update expression": {},
    "binary expression": {
        "before-operator": " ",
        "after-operator": " "
    },
    "logical expression": {
        "before-operator": " ",
        "after-operator": " "
    },
    "assignment": {
        "before-operator": " ",
        "after-operator": " "
    },
    "ternary expression": {
        "before-operator": " ",
        "after-operator": " "
    },
    "new": {},
    "function call": {},
    "member": {},
    "identifier": {},
    "identifier name": {},
    "literal": {},
    "objective-j type": {},
    "@[]": {},
    "@{}": {},
    "@import": {},
    "@implementation": {},
    "@protocol": {},
    "ivar": {
    },
    "method": {
        "before": "\n\n"
    },
    "message send": {},
    "@selector": {},
    "@protocol()": {},
    "@ref": {},
    "@deref": {},
    "@class": {},
    "@global": {},
    "#": {}
}
